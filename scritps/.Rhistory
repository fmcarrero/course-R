dat.1 <-  fromJSON("../data/tema1/students.json")
#install.packages("jsonlite")
library (jsonlite)
dat.1 <-  fromJSON("../data/tema1/students.json")
View(dat.1)
dat.2 <-  fromJSON("../data/tema1/student-courses.json")
View(dat.2)
currencies <- fromJSON(url)
url <- "https://finance.yahoo.com/webservice/v1/symbols/allcurrencies/quote?format=json"
currencies <- fromJSON(url)
install.packages('curl')
currencies <- fromJSON(url)
View(currencies)
library (curl)
url <- "https://finance.yahoo.com/webservice/v1/symbols/allcurrencies/quote?format=json"
currencies <- fromJSON(url)
View(currencies)
currency.data currencies$list$resources$resource$fields
currency.data<- currencies$list$resources$resource$fields
View(currency.data)
head(data.1,3)
head(dat.1,3)
dat.1$Email
currency.data[1:5,]
currency.data[1:5,1:2]
dat.1[c(2,5,8),]
dat.1[,c(2,5)]
head(dat.2,3)
students_data <- read.fwf("../data/tema1/student-fwf.txt",
widths = c(4,15,20,15,4),
col.names = c("id","nombre","email","carrera","a単o")
)
View(students_data)
stedents_Data_header <- read.fwf("../data/tema1/student-fwf-header.txt",
widths = c(4,15,20,15,4), #defne las posiciones
header = TRUE , sep = "t" , skip = 2)
stedents_Data_header <- read.fwf("../data/tema1/student-fwf-header.txt",
widths = c(4,15,20,15,4), #defne las posiciones
header = TRUE , sep = "\t" , skip = 2)
View(students_data)
View(stedents_Data_header)
students_data_no_email <- read.fwf("../data/tema1/student-fwf.txt",
widths = c(4,15,-20,15,4), #defne las posiciones
col.names = c("id","nombre","email","carrera","a単o") # coloca nombre a las columnas
)
stedents_Data_header <- read.fwf("../data/tema1/student-fwf-header.txt",
widths = c(4,15,20,15,4), #defne las posiciones
header = TRUE , sep = "\t" ,
skip = 2)
students_data_no_email <- read.fwf("../data/tema1/student-fwf.txt",
widths = c(4,15,-20,15,4), #defne las posiciones
col.names = c("id","nombre","email","carrera","a単o")
)
students_data_no_email <- read.fwf("../data/tema1/student-fwf.txt",
widths = c(4,15,-20,15,4), #defne las posiciones
col.names = c("id","nombre","carrera","a単o")
)
View(students_data_no_email)
View(currencies)
clientes <- c ("juan gabriel","ricado", "pedro")
fechas <- as.Date(c("2017-12-27","2017-11-1","2018-1-1"))
pago < - c(315,192.55,40.11)
pago <- c(315,192.55,40.11)
pedidos <- data.frame(clientes , fechas , pago)
View(pedidos)
pedidos <- data.frame(clientes , fechas , pago)
save(pedidos, file = "../data/tema1/pedidos.Rdata")
saveRDS(pedidos, file = "../data/tema1/pedidos.rds")
clientes_vip <- c("juan gabriel", "ricado")
save(pedidos,clientes_vip, file = "../data/tema1/pedidos.Rdata")
remove(pedidos)
load("../data/tema1/pedidos.Rdata")
orders <- readRDS("../data/tema1/pedidos.rds")
View(orders)
data(iris)
data("iris")
head(data(iris) ,3)
head(data(iris) ,10)
data(iris)
data(iris)
set.seed(250)
par(cex.lab = 1.5, cex.main = 1.2)
Data <- scale(iris[,-5]) # notice I am scaling the vectors)
clustergram(Data, k.range = 2:8, line.width = 0.004) # notice how I am using line.width.  Play with it on your problem, according to the scale of Y.
source_https("https://raw.github.com/talgalili/R-code-snippets/master/clustergram.r")
source("https://www.r-statistics.com/wp-content/uploads/2012/01/source_https.r.txt")
source_https("https://raw.github.com/talgalili/R-code-snippets/master/clustergram.r")
data(iris)
source("https://www.r-statistics.com/wp-content/uploads/2012/01/source_https.r.txt")
data(iris)
View(Data)
data(cars)
arisdata <- data(iris)
data(iris)
load("../data/tema1/pedidos.Rdata")
data(iris)
orders <- readRDS("../data/tema1/pedidos.rds")
save.image(file = "../data/tema1/alldata.Rdata")
primes <- c(2,3,5,7,11,13)
pow2 <-  c(2,4,8,16,32,64,128)
View(iris)
data(cars)
save.image(file = "../data/tema1/alldata.Rdata")  # guarda todos los objetos de la session
View(cars)
primes <- c(2,3,5,7,11,13)
pow2 <-  c(2,4,8,16,32,64,128)
save( list = c("prime", "pow2"), file = "../data/tema1/prime_and_pow2.Rdata")
prime <- c(2,3,5,7,11,13)
save( list = c("prime", "pow2"), file = "../data/tema1/prime_and_pow2.Rdata")
primes <- c(2,3,5,7,11,13)
save( list = c("primes", "pow2"), file = "../data/tema1/prime_and_pow2.Rdata")
attach("../data/tema1/prime_and_pow2.Rdata")
data <- read.csv("../data/tema1/missing-data.csv", na.strings = "")
View(data)
data <- read.csv("../data/tema1/missing-data.csv", na.strings = "")
data.cleaned <- na.omit(data)
View(data.cleaned)
is.na(data$Income)
data[!is.na(data$Income) ,]
data.income.cleaned <- data[!is.na(data$Income) ,]
View(data.income.cleaned)
View(data)
View(data.income.cleaned)
complete.cases(data)
View(data)
data.cleaned.2 <- data[complete.cases(data),]
View(data.cleaned.2)
data$Income[data$Income == 0]
data$Income[data$Income == 0] <- NA
View(data)
mean(data$Income)
mean(data$Income !=NA)
mean(data$Income !==NA)
mean(data$Income !=NA)
mean(data$Income , na.rm =TRUE )
sd(data$Income)
sd(data$Income , na.rm = TRUE)
data <- read.csv("../data/tema1/missing-data.csv", na.strings = "")
View(data)
data$Income.mean <- ifelse(is.na(data$Income) ,
mean(data$Income , na.rm = TRUE ),
data$Income)
View(data)
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs , n.missing , replace = TRUE)
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs, n.missing , replace = TRUE)
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs , n.missing , replace = TRUE)
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs , n.missing , replace = TRUE)
data.obs
imputed[missing] <- sample(x.obs , n.missing , replace = TRUE)
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs , n.missing , replace = TRUE)
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs, n.missing, replace = TRUE)
View(data)
F
random.inpute.data.frame <-  function(dataFrame,cols){
names <- names(dataFrame)
for(col in cols){
name <- paste(names[col] , ".imputed" , sep = "")
dataFrame[name] = rand.impute(dataFrame[, col])
}
}
rand.impute <-  function(x){ # X ES UN vector de datos que puede contener NA
missing <- is.na(x) # CONTIENE UN VECTOR DE VALORES TRUE O FALSE DEPENDIENDO DEL NA DE X
#N.MISSING contiene cuando valores son NA
n.missing <- sum(missing)
#x.obs son los valores que tiene dato diferente  de NA en x
x.obs <- x[!missing]
# por defecto devolvere lo mismo que habia entado por parametro
imputed <- x
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs, n.missing, replace = TRUE)
return(imputed)
}
rand.impute <-  function(x){ # X ES UN vector de datos que puede contener NA
missing <- is.na(x) # CONTIENE UN VECTOR DE VALORES TRUE O FALSE DEPENDIENDO DEL NA DE X
#N.MISSING contiene cuando valores son NA
n.missing <- sum(missing)
#x.obs son los valores que tiene dato diferente  de NA en x
x.obs <- x[!missing]
# por defecto devolvere lo mismo que habia entado por parametro
imputed <- x
#en los valores que faltaban los reemplazamos por una muestra
#de los que si conocemos (muestra aleatoria simpre con reemplazo)
imputed[missing] <- sample(x.obs, n.missing, replace = TRUE)
return(imputed)
}
d
random.inpute.data.frame <-  function(dataFrame,cols){
names <- names(dataFrame)
for(col in cols){
name <- paste(names[col] , ".imputed" , sep = "")
dataFrame[name] = rand.impute(dataFrame[, col])
}
}
data <- read.csv("../data/tema1/missing-data.csv", na.strings = "")
random.inpute.data.frame(data , col(1,2))
random.inpute.data.frame(data , c(1,2))
View(data)
random.inpute.data.frame <-  function(dataFrame,cols){
names <- names(dataFrame)
for(col in cols){
name <- paste(names[col] , ".imputed" , sep = "")
dataFrame[name] = rand.impute(dataFrame[, col])
}
dataFrame
}
random.inpute.data.frame(data , c(1,2))
View(data)
data <- random.inpute.data.frame(data , c(1,2))
View(data)
data <- read.csv("../data/tema1/missing-data.csv", na.strings = "")
data$Income[data$Income==0] <-NA
data <- random.inpute.data.frame(data , c(1,2))
View(data)
